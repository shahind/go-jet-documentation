"use strict";(self.webpackChunkgo_jet_documentation=self.webpackChunkgo_jet_documentation||[]).push([[115],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>s});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),p=c(n),s=a,f=p["".concat(l,".").concat(s)]||p[s]||u[s]||i;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:a,o[1]=d;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3917:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},o="\u0645\u06cc\u0627\u0646 \u0627\u0641\u0632\u0627\u0631",d={unversionedId:"middleware",id:"middleware",title:"\u0645\u06cc\u0627\u0646 \u0627\u0641\u0632\u0627\u0631",description:"middleware}",source:"@site/i18n/fa/docusaurus-plugin-content-docs/current/middleware.md",sourceDirName:".",slug:"/middleware",permalink:"/go-jet-documentation/docs/middleware",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"\u0645\u0633\u06cc\u0631\u0628\u0646\u062f\u06cc",permalink:"/go-jet-documentation/docs/routing"},next:{title:"\u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc",permalink:"/go-jet-documentation/docs/validation"}},l={},c=[],m={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"\u0645\u06cc\u0627\u0646 \u0627\u0641\u0632\u0627\u0631"),(0,a.kt)("p",null,"Middleware provides a convenient mechanism for inspecting and filtering  incomind and outcoming HTTP requests. Like controllers, a middleware can be created with Alfred. The command is ",(0,a.kt)("inlineCode",{parentName:"p"},"alfred middleware:create [middleware name]"),"."),(0,a.kt)("p",null,"For instance, middleware named \u201cbatman\u201d can be created by running command ",(0,a.kt)("inlineCode",{parentName:"p"},"./alfred middleware:create batman"),".\nAfter executing the command, the newly created middleware will be available in folder ",(0,a.kt)("inlineCode",{parentName:"p"},"/app/http/middleware")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="New batman middleware',title:'"New',batman:!0,middleware:!0},'package middleware\n\nimport (\n    "net/http"\n)\n\ntype BatmanMiddleware struct {\n    Name        string\n    Description string\n}\n\n// Handle description\nfunc (BatmanMiddleware) Handle(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request){\n          // Do stuff here if you wanna execute something BEFORE handling the request\n          next.ServeHTTP(w, r)\n          // Do something here if you wanna execute something AFTER the request\n    })\n}\n\n// GetName returns the middleware name\nfunc (m BatmanMiddleware) GetName() string {\n  return m.Name\n}\n\n// GetDescription returns the middleware description\nfunc (m BatmanMiddleware) GetDescription() string {\n  return m.Description\n}\n\n\nfunc NewBatmanMiddleware() BatmanMiddleware{\n  return BatmanMiddleware{\n     Name:        "BasicAuth",\n     Description: "Provides basic authentication",\n  }\n}\n')),(0,a.kt)("p",null,"As you can see in the example above, middleware contains three different methods: ",(0,a.kt)("inlineCode",{parentName:"p"},"Handle"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"GetName")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"GetDescription"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Handle")," is the method that is executed when the middleware is executed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GetName")," returns the middleware name."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GetDescription")," returns the middleware description.")),(0,a.kt)("p",null,"Every middleware should have a 'factory' function that returns an instance of the current middleware. You can use this function to enable middlewares over specific routes or groups. Just add it in the Middleware field of an HTTP router."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Middleware in HTTPRouter"',title:'"Middleware',in:!0,'HTTPRouter"':!0},'var AppRouter = register.HTTPRouter{\n  Route: []register.Route{\n     {\n        Name:        "home",\n        Path:        "/",\n        Action:      "HomeController@Main",\n        Method:      "GET",\n        Description: "Main route",\n        Middleware: []register.Middleware{\n           middleware.NewBatmanMiddleware(),\n        },\n     },\n  }\n}\n')))}u.isMDXComponent=!0}}]);