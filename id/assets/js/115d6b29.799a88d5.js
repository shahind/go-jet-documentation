"use strict";(self.webpackChunkgo_jet_documentation=self.webpackChunkgo_jet_documentation||[]).push([[453],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return t?a.createElement(g,l(l({ref:n},u),{},{components:t})):a.createElement(g,l({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2850:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const o={},l="Controller",i={unversionedId:"controller",id:"controller",title:"Controller",description:"Saat memulai sebuah framework MVC, Go-Jet menggunakan controller sebagai endpoint request. Disini developer bisa meng-handle semua logic yang akan diterapkan pada tiap request yang masuk. Kamu bisa membuat controller dengan menjalankan command berikut di console:",source:"@site/i18n/id/docusaurus-plugin-content-docs/current/controller.md",sourceDirName:".",slug:"/controller",permalink:"/id/docs/controller",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Validation",permalink:"/id/docs/validation"},next:{title:"Models",permalink:"/id/docs/models"}},s={},p=[{value:"Menangani request",id:"menangani-request",level:3},{value:"Menangani request body",id:"menangani-request-body",level:4},{value:"Handle response",id:"handle-response",level:3}],u={toc:p};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"controller"},"Controller"),(0,r.kt)("p",null,"Saat memulai sebuah framework MVC, Go-Jet menggunakan controller sebagai endpoint request. Disini developer bisa meng-handle semua logic yang akan diterapkan pada tiap request yang masuk. Kamu bisa membuat controller dengan menjalankan command berikut di console:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./alfred controller:create sample\n")),(0,r.kt)("p",null,"Kemudian Go-Jet akan membuatkan sebuah file .go yang berisi sebuah controller bernama \u201cSampleController\u201d di dalam directory ",(0,r.kt)("inlineCode",{parentName:"p"},"/app/http/controller"),".\nIsinya akan berupa seperti berikut:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="SampleController Baru"',title:'"SampleController','Baru"':!0},'package controller\n\nimport "github.com/shahind/go-jet-framework"\n\ntype SampleController struct{\n    gwf.BaseController\n}\n\n// Main controller method\nfunc (c *SampleController) Main(){\n    // Insert your custom logic\n}\n')),(0,r.kt)("p",null,"Ketika membuat sebuah controller, Go-Jet secara otomatis akan menambahkan controller tadi ke function Main, yang mana bisa diperluas dengan beberapa logic, seperti yang dicontohkan dibawah; controller bisa diperluas dengan menambahkan public function baru."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="SampleController dengan beberap logic"',title:'"SampleController',dengan:!0,beberap:!0,'logic"':!0},'// Sample controller\npackage controller\n\nimport (\n    "github.com/shahind/go-jet-framework"\n    "github.com/shahind/go-jet/exception"\n)\n\ntype SampleController struct{\n    gwf.BaseController\n}\n\n// Main controller method\nfunc (c *SampleController) Main() {\n    _, err := c.Response.Write([]byte("Hello world")) if err != nil {\n        exception.ProcessError(err)\n    }\n}\n')),(0,r.kt)("p",null,"Untuk mendapatkan akses ke semua aspek Go-Jet controller, termasuk HTTP request dan response, sebuah controller haruslah meng-extend ",(0,r.kt)("inlineCode",{parentName:"p"},"gwf.BaseController"),"."),(0,r.kt)("p",null,'Karena service containernya digunakan untuk "menyelesaikan" semua controller di Go-Jet. developer bisa type-hint tiap depedencynya karena depedency ini akan di-inject ke instansi controller, sebagaimana yang dijelaskan pada code dibawah:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="SampleController dengan DependencyInjection"',title:'"SampleController',dengan:!0,'DependencyInjection"':!0},'// Dependency injection in controller\npackage controller\n\nimport (\n    "github.com/shahind/go-jet-framework" \n    "github.com/shahind/go-jet/database/model" \n    "github.com/jinzhu/gorm"\n)\n\ntype SampleController struct{\n    gwf.BaseController\n}\n\n// Main controller method\nfunc (c *SampleController) Main(db *gorm.DB) {\n    var user model.User\n    if err := db.Find(&user).Error;err != nil {\n        gwf.ProcessError(err)\n    }\n}\n')),(0,r.kt)("h3",{id:"menangani-request"},"Menangani request"),(0,r.kt)("p",null,"By extending ",(0,r.kt)("inlineCode",{parentName:"p"},"gwf.BaseController")," controllers have access to the incoming request within the ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Access to the incoming request"',title:'"Access',to:!0,the:!0,incoming:!0,'request"':!0},"// Main controller method\nfunc (c *SampleController) Main(db *gorm.DB) {\n    fmt.Println(c.Request.Method)\n}\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Field ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," merupakan represent sebuah pointer untuk object ",(0,r.kt)("inlineCode",{parentName:"p"},"http.Request")," yang masuk.")),(0,r.kt)("h4",{id:"menangani-request-body"},"Menangani request body"),(0,r.kt)("p",null,"Jika kamu telah mem-validasi request yang masuk dengan validation struktur, kamu bisa mengakses request data dengan mudah, termasuk value ",(0,r.kt)("inlineCode",{parentName:"p"},"kernel.Request")," dalam parameter method.\nJadi membantu kamu untuk mengakses value yang ada tanpa harus repot-repot meng-decoding tiap request yang masuk."),(0,r.kt)("p",null,"Data akan ber-type ",(0,r.kt)("inlineCode",{parentName:"p"},"map[string]interface{}"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Mengkases request di Controller"',title:'"Mengkases',request:!0,di:!0,'Controller"':!0},'// Main controller method\nfunc (c *SampleController) Main(db *gorm.DB, req kernel.Request) {\n    fmt.Println(req["name"]) // You can access to the incoming request payload with the `req` object\n    \n    var user model.User\n    if err := db.Find(&user).Error;err != nil {\n        gwf.ProcessError(err)\n    }\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Karena data object di ",(0,r.kt)("inlineCode",{parentName:"p"},"kernel.Request")," merupakan sebuah ",(0,r.kt)("inlineCode",{parentName:"p"},"map[string]interface{}"),", maka setiap value harus meng-cast type data yang aslinya."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Contoh type casting"',title:'"Contoh',type:!0,'casting"':!0},'req["username"]          // This was originally a string\nreq["username"].(string) // But you\'ve explicitly cast to use it properly\n'))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Kamu selalu bisa men-decode manual body request secara manual untuk menggunakan struct aslinya.")),(0,r.kt)("h3",{id:"handle-response"},"Handle response"),(0,r.kt)("p",null,"Similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"Request")," the controller has the ",(0,r.kt)("inlineCode",{parentName:"p"},"Response")," field that is used to handle the outgoing http response."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Handle outgoing Response in controller"',title:'"Handle',outgoing:!0,Response:!0,in:!0,'controller"':!0},'// Main controller method\nfunc (c *SampleController) Main() {\n    _, err := c.Response.Write([]byte("Hello world")) if err != nil {\n        exception.ProcessError(err)\n    }\n}\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"Response")," field represent a pointer to the ",(0,r.kt)("inlineCode",{parentName:"p"},"http.ResponseWriter")," object")))}c.isMDXComponent=!0}}]);