"use strict";(self.webpackChunkgo_jet_documentation=self.webpackChunkgo_jet_documentation||[]).push([[833],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},o="Middleware",l={unversionedId:"middleware",id:"middleware",title:"Middleware",description:"I middleware sono componenti atti ad intercettare le richieste in entrata e in uscita del server.",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/middleware.md",sourceDirName:".",slug:"/middleware",permalink:"/it/docs/middleware",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Gestione delle rotte",permalink:"/it/docs/routing"},next:{title:"Validazione",permalink:"/it/docs/validation"}},d={},c=[],s={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"I middleware sono componenti atti ad intercettare le richieste in entrata e in uscita del server.\nPermettono di filtrare, modificare e analizzare i valori di input e output prima o dopo che essere state prese in carico da un controller."),(0,a.kt)("p",null,"Il comando per creare un nuovo middleware \xe8 il seguente comando ",(0,a.kt)("inlineCode",{parentName:"p"},"alfred middleware create [middleware name]"),".\nAd esempio, un middleware di dome \"batman' pu\xf2 essere creato tramite il comando ",(0,a.kt)("inlineCode",{parentName:"p"},"./alfred middleware create batman"),"."),(0,a.kt)("p",null,"Dopo averlo eseguito il nuovo middleware sar\xe0 disponibile nella cartella ",(0,a.kt)("inlineCode",{parentName:"p"},"app/http/batman.go"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Nuovo middleware"',title:'"Nuovo','middleware"':!0},'package middleware\n\nimport (\n    "net/http"\n)\n\ntype BatmanMiddleware struct {\n    Name        string\n    Description string\n}\n\nfunc (BatmanMiddleware) Handle(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request){\n          // Inserisci qui la tua logica se desideri eseguire qualcosa PRIMA che venga preso in carico dal controller\n          next.ServeHTTP(w, r)\n          // Inserisci qui la tua logica se desideri eseguire qualcosa DOPO che venga preso in carico dal controller\n    })\n}\n\n// GetName returns the middleware name\nfunc (m BatmanMiddleware) GetName() string {\n  return m.Name\n}\n\n// GetDescription returns the middleware description\nfunc (m BatmanMiddleware) GetDescription() string {\n  return m.Description\n}\n\n\nfunc NewBatmanMiddleware() BatmanMiddleware{\n  return BatmanMiddleware{\n     Name:        "BasicAuth",\n     Description: "Provides basic authentication",\n  }\n}\n')),(0,a.kt)("p",null,"Come \xe8 possibile visionare nell'esempio i middleware contengono tre metodi differenti: ",(0,a.kt)("inlineCode",{parentName:"p"},"Handle"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"GetName")," e ",(0,a.kt)("inlineCode",{parentName:"p"},"GetDescription"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Il metodo ",(0,a.kt)("inlineCode",{parentName:"li"},"Handle")," \xe8 il metodo che viene eseguito quando il middleware viene preso in carico dal server."),(0,a.kt)("li",{parentName:"ul"},"Il metodo ",(0,a.kt)("inlineCode",{parentName:"li"},"GetName")," restituisce il nome del middleware."),(0,a.kt)("li",{parentName:"ul"},"Il metodo ",(0,a.kt)("inlineCode",{parentName:"li"},"GetDescription")," restituisce la descrizione del middleware.")),(0,a.kt)("p",null,"Tutti i middleware devono avere un metodo ",(0,a.kt)("em",{parentName:"p"},"factory")," in grado di restituire una nuova istanza dello stesso middleware. Per poter integrare un middleware all'interno di una specifica rotta sar\xe0 necessario inserire il metodo 'factory' all'interno della rotta."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Registrazione di un middleware all\'interno di una specifica rotta/gruppo"',title:'"Registrazione',di:!0,un:!0,middleware:!0,"all'interno":!0,una:!0,specifica:!0,'rotta/gruppo"':!0},'var AppRouter = register.HTTPRouter{\n  Route: []register.Route{\n     {\n        Name:        "home",\n        Path:        "/",\n        Action:      "HomeController@Main",\n        Method:      "GET",\n        Description: "Main route",\n        Middleware: []register.Middleware{\n           middleware.NewBatmanMiddleware(),\n        },\n     },\n  }\n}\n')))}p.isMDXComponent=!0}}]);