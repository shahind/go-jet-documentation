"use strict";(self.webpackChunkgo_jet_documentation=self.webpackChunkgo_jet_documentation||[]).push([[958],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>s});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),d=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=d(t),s=r,k=p["".concat(o,".").concat(s)]||p[s]||c[s]||i;return t?a.createElement(k,m(m({ref:n},u),{},{components:t})):a.createElement(k,m({ref:n},u))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,m=new Array(i);m[0]=p;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,m[1]=l;for(var d=2;d<i;d++)m[d]=t[d];return a.createElement.apply(null,m)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},917:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>m,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_label:"Commands"},m="Commands",l={unversionedId:"cli",id:"cli",title:"Commands",description:"Alfred merupakan command-line interface (CLI) yang ada di Go-Jet. Alfred menyediakan banyak command yang bisa membantu kamu ketika membuat aplikasimu. kamu bisa meng-kompile si Alfred dengan menjalankan",source:"@site/i18n/id/docusaurus-plugin-content-docs/current/cli.md",sourceDirName:".",slug:"/cli",permalink:"/id/docs/cli",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Commands"},sidebar:"docs",previous:{title:"Migration",permalink:"/id/docs/migration"},next:{title:"Dependency Injection",permalink:"/id/docs/service_container"}},o={},d=[{value:"Membuat command sendiri",id:"membuat-command-sendiri",level:2},{value:"Dependency injection",id:"dependency-injection",level:2}],u={toc:d};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"commands"},"Commands"),(0,r.kt)("p",null,"Alfred merupakan command-line interface (CLI) yang ada di Go-Jet. Alfred menyediakan banyak command yang bisa membantu kamu ketika membuat aplikasimu. kamu bisa meng-kompile si Alfred dengan menjalankan\n",(0,r.kt)("inlineCode",{parentName:"p"},"sudo make build-cli")," di root projekmu."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ./alfred show:commands\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Commands"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"database:seed"),(0,r.kt)("td",{parentName:"tr",align:null},"Mengeksekusi database seed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"model:create ","[nama model]"),(0,r.kt)("td",{parentName:"tr",align:null},"Membuat model database baru")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"migration:create ","[nama migration]"),(0,r.kt)("td",{parentName:"tr",align:null},"Membuat migration baru")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"migration:up"),(0,r.kt)("td",{parentName:"tr",align:null},"Mengeksekusi migration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"migration:rollback ","[step]"),(0,r.kt)("td",{parentName:"tr",align:null},"Mengeksekusi rollback migration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"show:commands"),(0,r.kt)("td",{parentName:"tr",align:null},"Menampilkan menu bantuan")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"controller:create ","[nama controller]"),(0,r.kt)("td",{parentName:"tr",align:null},"Membuat controller baru")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cmd:create ","[nama command]"),(0,r.kt)("td",{parentName:"tr",align:null},"Membuat command CLI baru")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"middleware:create ","[nama middleware]"),(0,r.kt)("td",{parentName:"tr",align:null},"Membuat middleware baru")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"generate:key"),(0,r.kt)("td",{parentName:"tr",align:null},"Men-generate key aplikasi")))),(0,r.kt)("h2",{id:"membuat-command-sendiri"},"Membuat command sendiri"),(0,r.kt)("p",null,"Kamu bisa coba membuat command sendiri untuk Alfred, dengan menjalankan ",(0,r.kt)("inlineCode",{parentName:"p"},"./alfred cmd:create <command name>"),".\nCommand ini akan membuat file .go baru di folder ",(0,r.kt)("inlineCode",{parentName:"p"},"app/console")," yang memiliki beberapa kode boilerplate."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ./alfred cmd:create batman\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="custom command baru"',title:'"custom',command:!0,'baru"':!0},'package console\n\ntype Batman struct {\n    Signature   string\n    Description string\n    Args        string\n}\n\n// Command registration\nfunc (c *Batman) Register() {\n    c.Signature = "command:signature"          // Change command signature\n    c.Description = "Execute database seeder"  // Change command desc\n}\n\n// Command business logic\nfunc (c *Batman) Run() {\n    // Insert command logic\n}\n')),(0,r.kt)("p",null,"Seperti yang terlihat di figur 3, command ini memiliki dua method utama:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Register: digunakan oleh command ",(0,r.kt)("inlineCode",{parentName:"li"},"show:commands")," untuk menunjukkan signatur dan deskripsi command."),(0,r.kt)("li",{parentName:"ul"},"Run: berisi logic utama dari custom commandmu.")),(0,r.kt)("p",null,"Hal terakhir yang perlu kita lakukan adalah me-registerkan custom command kita ini ke Go-Jet register.\nBuka file ",(0,r.kt)("inlineCode",{parentName:"p"},"app/console/kernel.go")," kemudian tambahkan sebuah pointer ke command bari di CommandRegister struct:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Struktur register command"',title:'"Struktur',register:!0,'command"':!0},"// Commands configuration represent all Go-Jet application conf\n// Every command needs to be registered in the following list\nvar (\n    Commands = register.CommandRegister{\n        // Here is where you've to register your custom commands\n    }\n)\n")),(0,r.kt)("h2",{id:"dependency-injection"},"Dependency injection"),(0,r.kt)("p",null,"TODO"))}c.isMDXComponent=!0}}]);