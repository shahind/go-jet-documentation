"use strict";(self.webpackChunkgo_jet_documentation=self.webpackChunkgo_jet_documentation||[]).push([[116],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),u=o,g=c["".concat(s,".").concat(u)]||c[u]||m[u]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},924:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={},i="Models",l={unversionedId:"models",id:"models",title:"Models",description:"Nel framework MVC i modello sono responsavili per dell'interazione con il database.",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/models.md",sourceDirName:".",slug:"/models",permalink:"/go-jet-documentation/it/docs/models",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Controller",permalink:"/go-jet-documentation/it/docs/controller"},next:{title:"Migrazioni",permalink:"/go-jet-documentation/it/docs/migration"}},s={},d=[{value:"Seeding",id:"seeding",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"models"},"Models"),(0,o.kt)("p",null,"Nel framework MVC i modello sono responsavili per dell'interazione con il database.\nGo-Jet utilizza la libreria ",(0,o.kt)("a",{parentName:"p",href:"https://gorm.io/docs/models.html"},"GORM")," per gestire queste operazioni."),(0,o.kt)("p",null,"\xc8 possibile creare nuovi modelli utilizzando il comando ",(0,o.kt)("inlineCode",{parentName:"p"},"alfred model:create [model name]"),"."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"I modelli generati tramite Alfred sono inseriti all'interno del paccheto ",(0,o.kt)("inlineCode",{parentName:"p"},"database/model"),".")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Tutti i modelli devono pessere registrati all'interno della struttura ",(0,o.kt)("inlineCode",{parentName:"p"},"BaseEntities")," presente nel pacchetto ",(0,o.kt)("inlineCode",{parentName:"p"},"register"),".\nUtilizzando Alfred questa operazione \xe8 eseguita in automatico ma, se si vuole creare un nuovo modello, \xe8 necessario registrarlo manualmente."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Registrazione di un nuovo modello"',title:'"Registrazione',di:!0,un:!0,nuovo:!0,'modello"':!0},"// Other BaseEntities structs...\n//\n// Models will handle all application models\n// Here is where you've to register your custom models\n// If you create a new model with Alfred it will be auto-registered\nModels: register.ModelRegister{\n  model.User{},\n  // Here is where you\u2019ve to register new models\n},\n"))),(0,o.kt)("h2",{id:"seeding"},"Seeding"),(0,o.kt)("p",null,"\xc8 possibile popolare il database con dati di test implementanto il metodo ",(0,o.kt)("inlineCode",{parentName:"p"},"Seed"),".\nQuesto sar\xe0 responsabile di inserire dei dati all'interno della tabella del database gestira dal modello."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Go-Jet utilizza la libreria ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/brianvoe/gofakeit"},"GoFakeIt")," per generare dati casuali.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Il metodo Seed"',title:'"Il',metodo:!0,'Seed"':!0},"// Execute model seeding\nfunc (User) Seed(db *gorm.DB) {\n    for i := 0; i < 10; i++ {\n        password := gofakeit.Password(true, true, true, true, false, 32)\n        encryptedPassword, _ := bcrypt.GenerateFromPassword([]byte(password), 14)\n\n        user := User{\n            Name:     gofakeit.FirstName(),\n            Surname:  gofakeit.LastName(),\n            Username: gofakeit.Username(),\n            Password: string(encryptedPassword),\n        }\n\n        if err := db.Create(&user).Error; err != nil {\n            exception.ProcessError(err)\n        }\n    }\n}\n")),(0,o.kt)("p",null,"I seeder possono essere eseguiti tramite il comando ",(0,o.kt)("inlineCode",{parentName:"p"},"alfred database:seed [model name]"),"."),(0,o.kt)("admonition",{type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"Se il nome modello non viene inserito, il comando verr\xe0 eseguito per tutti i modelli presenti nel pacchetto ",(0,o.kt)("inlineCode",{parentName:"p"},"database/model"),".")))}m.isMDXComponent=!0}}]);