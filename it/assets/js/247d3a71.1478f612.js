"use strict";(self.webpackChunkgo_jet_documentation=self.webpackChunkgo_jet_documentation||[]).push([[731],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(g,l(l({ref:n},p),{},{components:t})):r.createElement(g,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var r=t(7462),o=(t(7294),t(3905));const i={},l="Controller",a={unversionedId:"controller",id:"controller",title:"Controller",description:"controller}",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/controller.md",sourceDirName:".",slug:"/controller",permalink:"/it/docs/controller",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Validazione",permalink:"/it/docs/validation"},next:{title:"Models",permalink:"/it/docs/models"}},c={},s=[{value:"Gestione della richiesta",id:"-handle-request",level:2},{value:"Gestire il corpo della richiesta",id:"-handle-request-body",level:3},{value:"Gestione della risposta",id:"-handle-response",level:2},{value:"Dependency injection",id:"-dependency-injection",level:2}],p={toc:s};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"controller"},"Controller"),(0,o.kt)("p",null,"Essendo un framework MVC, Go-Jet utilizza i controller per gestire le richieste HTTP. Al loro interno gli sviluppatori possono gestire ed implementare le logiche di business."),(0,o.kt)("p",null,"\xc8 possibile creare un nuovo controller utilizzando il comando ",(0,o.kt)("inlineCode",{parentName:"p"},"alfred controller:create [controller name]"),"."),(0,o.kt)("p",null,"\xc8 possibile creare un nuovo controller lanciando il comando ",(0,o.kt)("inlineCode",{parentName:"p"},"alfred controller:create sample"),". Verr\xe0 creato un nuovo file ",(0,o.kt)("inlineCode",{parentName:"p"},"controller/sample.go")," all'interno del pacchetto ",(0,o.kt)("inlineCode",{parentName:"p"},"app/controller"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Nuovo controller"',title:'"Nuovo','controller"':!0},'package controller\n\nimport "github.com/shahind/go-jet-framework"\n\ntype SampleController struct{\n    gwf.BaseController\n}\n\n// Main controller method\nfunc (c *SampleController) Main(){\n    // Insert your custom logic\n}\n')),(0,o.kt)("p",null,"I metodi della struttura principale (in quasto caso SampleController) sono i veri gestori delle richieste HTTP.\nDi default, alla creazione di un nuovo controller viene creato il metodo ",(0,o.kt)("inlineCode",{parentName:"p"},"Main()"),"."),(0,o.kt)("p",null,"All'interno dei metodi \xe8 possibile inserire la business logic dell'endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="SampleController with some logic"',title:'"SampleController',with:!0,some:!0,'logic"':!0},'// Sample controller\npackage controller\n\nimport (\n    "github.com/shahind/go-jet-framework"\n    "github.com/shahind/go-jet/exception"\n)\n\ntype SampleController struct{\n    gwf.BaseController\n}\n\n// Main controller method\nfunc (c *SampleController) Main() {\n    _, err := c.Response.Write([]byte("Hello world")) if err != nil {\n        exception.ProcessError(err)\n    }\n}\n')),(0,o.kt)("p",null,"Per poter avere accesso alla Response e al Request, \xe8 necessario che il controller estenda il ",(0,o.kt)("inlineCode",{parentName:"p"},"gwf.BaseController"),"."),(0,o.kt)("h2",{id:"-handle-request"},"Gestione della richiesta"),(0,o.kt)("p",null,"Estendendo il ",(0,o.kt)("inlineCode",{parentName:"p"},"gwf.BaseController")," il controller ha accesso a tutti i valori presenti all'interno della richiesta HTTP in arrivo.\n\xc8 possibile leggere i valori tramite il campo ",(0,o.kt)("inlineCode",{parentName:"p"},"c.Request")," (di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"*http.Request"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Lettura dei valori della richiesta"',title:'"Lettura',dei:!0,valori:!0,della:!0,'richiesta"':!0},"// Main controller method\nfunc (c *SampleController) Main(db *gorm.DB) {\n    fmt.Println(c.Request.Method)\n}\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Il campo ",(0,o.kt)("inlineCode",{parentName:"p"},"Request")," \xe8 un puntatore a un oggetto di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"*http.Request"),".")),(0,o.kt)("h3",{id:"-handle-request-body"},"Gestire il corpo della richiesta"),(0,o.kt)("p",null,"Se la richiesta \xe8 stata validata tramite una struttura di validazione, puoi accedere al contenuto semplicemente includendo un parmetro di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"kernel.Request")," all'interno del metodo. In questo modo \xe8 possibile leggere i valori della richiesta senza dover esplicitamente decodificare il contenuto all'interno di una struttura."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"I valori di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"kernel.Request")," sono una struttura di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"map[string]interface{}"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Accedere al contenuto della richiesta all\'interno di un controller"',title:'"Accedere',al:!0,contenuto:!0,della:!0,richiesta:!0,"all'interno":!0,di:!0,un:!0,'controller"':!0},'// Main controller method\nfunc (c *SampleController) Main(db *gorm.DB, req kernel.Request) {\n    fmt.Println(req["name"]) // You can access to the incoming request payload with the `req` object\n    \n    var user model.User\n    if err := db.Find(&user).Error;err != nil {\n        gwf.ProcessError(err)\n    }\n}\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Dato che i valori all'interno della ",(0,o.kt)("inlineCode",{parentName:"p"},"kenel.Request")," sono di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"map[string]interface{}")," \xe8 necessario effettuare un cast esplicito al tipo di appartenenza."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Esempio di casting"',title:'"Esempio',di:!0,'casting"':!0},'req["username"]          // This was originally a string\nreq["username"].(string) // But you\'ve explicitly cast to use it properly\n'))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Se preferisci puoi sempre decodificare manualmente il contenuto della richiesta all'interno di una struttura"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Decodifica manuale del contenuto della richiesta"',title:'"Decodifica',manuale:!0,del:!0,contenuto:!0,della:!0,'richiesta"':!0},'type Credentials struct {\n Username string `json:"username"`\n Password string `json:"password"`\n}\n\nvar credentials Credentials\nif err := tool.DecodeJsonRequest(c.Request, &data); err != nil {\n  log.Fatal(err)\n}\n\nfmt.Println(credentials.Username)\n'))),(0,o.kt)("h2",{id:"-handle-response"},"Gestione della risposta"),(0,o.kt)("p",null,"Come per la richiesta, \xe8 possibile accedere al contenuto della risposta tramite il campo ",(0,o.kt)("inlineCode",{parentName:"p"},"c.Response")," (di tipo ",(0,o.kt)("inlineCode",{parentName:"p"},"*http.ResponseWriter"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="Gestione delle risposta HTTP"',title:'"Gestione',delle:!0,risposta:!0,'HTTP"':!0},'// Main controller method\nfunc (c *SampleController) Main() {\n    _, err := c.Response.Write([]byte("Hello world")) if err != nil {\n        exception.ProcessError(err)\n    }\n}\n')),(0,o.kt)("h2",{id:"-dependency-injection"},"Dependency injection"),(0,o.kt)("p",null,"Dato che i controller sono eseguiti all'interno dei service container, tutti i metodi presenti sono in grado di risolvere i autonomia le dipendenze indicate al loro interno."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="DI all\'interno di un controller"',title:'"DI',"all'interno":!0,di:!0,un:!0,'controller"':!0},'// Dependency injection in controller\npackage controller\n\nimport (\n    "github.com/shahind/go-jet-framework" \n    "github.com/shahind/go-jet/database/model" \n    "github.com/jinzhu/gorm"\n)\n\ntype SampleController struct{\n    gwf.BaseController\n}\n\n// Main controller method\nfunc (c *SampleController) Main(db *gorm.DB) {\n    var user model.User\n    if err := db.Find(&user).Error;err != nil {\n        gwf.ProcessError(err)\n    }\n}\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Per poter essere risolte, le dipendenze indicato all'interno dei metodi del controller devono essere specificate all'interno dei servizi di sistema.\nIn caso contrario il metodo riporter\xe0 un runtime error.")))}d.isMDXComponent=!0}}]);